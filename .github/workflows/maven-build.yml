name: build on maven

on:
  watch:
    types: [started]
  pull_request:
    types: [opened, reopened, edited, synchronize, ready_for_review]
  push:
    branches:
      - main
      - master
      - '**'
  workflow_dispatch:

jobs:
  verify:
    name: verify with maven
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Xmx4096m -Xms2048m -XX:MaxMetaspaceSize=4096m -Xss8m"
      SKIP_NPM_CONFIG: false
      NPMREGISTRY: https://registry.npmjs.org
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 8 & 11 for x64
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        architecture: x64
        java-version: |
          8
          11

    - uses: s4u/maven-settings-action@v2.8.0
      with:
        sonatypeSnapshots: true

    - name: Build the Maven verify phase
      run: mvn -B -V clean verify -Prun-its -Pci
  
  build:
    name: Build and push
    runs-on: ubuntu-latest
    needs: verify
    if: ${{ github.event_name == 'push' }}
    env:
      MAVEN_OPTS: "-Xmx4096m -Xms2048m -XX:MaxMetaspaceSize=4096m -Xss8m"
      SKIP_NPM_CONFIG: false
      NPMREGISTRY: https://registry.npmjs.org
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 8 & 11 for x64
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        architecture: x64
        java-version: |
          8
          11

    - uses: s4u/maven-settings-action@v2.8.0
      with:
        servers: |
          [{
              "id": "sonatype-nexus-snapshots",
              "username": "${{ secrets.SONATYPE_BOT_USERNAME }}",
              "password": "${{ secrets.SONATYPE_BOT_TOKEN }}"
          }]

    - name: Build with toolchains
      run: mvn -B -V clean install -DskipNpmConfig=false

    - name: Deploy the artifact
      run: mvn help:effective-settings -B -V -DskipTests=true -DskipNpmConfig=false deploy -e
    
    - name: Checkout tools repo
      uses: actions/checkout@v4
      with:
        repository: Commonjava/commonjava-images
        path: commonjava-images
    
    - name: Login into Quay
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./commonjava-images/indy/
        file: ./commonjava-images/indy/multistage.Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          quay.io/factory2/indy:latest
      env:
        GIT_URL: ${{ github.repositoryUrl }}
        GIT_REVISION: ${{ github.ref_name }}
